knitr::opts_chunk$set(echo = TRUE)
library(knitr)
df <- read.csv("./chrom.csv", header = TRUE)
kable(df)
names(knitr::knit_engines$get())
clear
clear()
View(df)
ls
ls()
installed.packages("tidyverse")
install.packages("tidyverse")
clear()
clear
str(USPersonalExpenditure)
USPersonalExpenditure
tmp = state.center
tmp
tmp$z <- 1:50
tmp
tmp %>% str()
library(magrittr)
tmp %>% str()
tmp %>% str
tmp$z <- toString(tmp$z)
tmp %>% str
c(state.name, state.area) %>% data.frame
tmp <- c(state.name, state.area) %>% data.frame
tmp
tmp <- list(state.name, state.area) %>% data.frame
tmp
str(tmp)
tmp <- list(state.name, state.abb, state.area, state.center) %>% data.frame
str(tmp)
library(ggplot2)
pwd()
pws
pwd
dir()
tmp <- read.table("./Documents/angsd/ablation.csv", sep = ',', stringsAsFactors = FALSE)
head(tmp)
str(mtp)
str(tmp)
tmp <- read.table("./Documents/angsd/ablation.csv", sep = ',', stringsAsFactors = FALSE, header = TRUE)
head(tmp)
str(tmp)
class(tmp)
table(tmp$Measurement)
table(tmp$Experiment)
ggplot(data = tmp, aes(x = Time, y = Score))
ggplot(data = tmp, aes(x = Time, y = Score)) + geom_point()
ggplot(data = tmp, aes(x = Time, y = Score)) + geom_point(size = 4, shape = 2, alpha = 0.5)
ggplot(data = tmp, aes(x = Time, y = Score)) + geom_point(size = 4, aes(shape = CellType))
ggplot(data = tmp, aes(x = Time, y = Score)) + geom_point(size = 4, aes(shape = CellType, color = CellTyoe))
ggplot(data = tmp, aes(x = Time, y = Score)) + geom_point(size = 4, aes(shape = CellType, color = CellType))
ggplot(data = tmp, aes(x = Time, y = Score)) + geom_point(size = 4, aes(shape = CellType, color = Experiement))
ggplot(data = tmp, aes(x = Time, y = Score)) + geom_point(size = 4, aes(shape = CellType, color = Experiment))
ggplot(data = tmp, aes(x = Time, y = Score)) + geom_point(size = 4, aes(shape = CellType, color = Experiment)) + scale_shape_manual(values = c(1, 4))
ggplot(data = tmp, aes(x = Time, y = Score)) + geom_point(size = 4, aes(shape = CellType, color = Experiment)) + scale_shape_manual(values = c(1, 4)) + facet_grid(CellType-Experiment)
ggplot(data = tmp, aes(x = Time, y = Score)) + facet_grid(CellType - Experiment)
?facet_grid
library(tidyr)
?gather
ibrary(ggplot2)
library(DESeq2)
library(magrittr)
df <- read.table("../data/featureCounts_human.txt", header = TRUE, stringsAsFactors = FALSE)
head(df)
names(df) <- c(names(df)[1:6], sprintf("MSDP%s", seq(1:10)), sprintf("SDPC%s", seq(1:10)))
row.names(df) <- make.names(df$Geneid)
# df <- df[c(names(df)[1:6], "MSDP2", "MSDP3", "MSDP4", "MSDP5", "MSDP6", "MSDP9", "MSDP10", "SDPC4", "SDPC5", "SDPC7", "SDPC10")]
df <- df[ ,-c(1:6)]
col_data <- DataFrame(condition = gsub("[0-9]+", "", names(df)), row.names = names(df))
# Create DESeq object
setwd("~/Documents/angsd/ANGSD-Course-2020/scripts")
t2)
library(DESeq2)
library(magrittr)
df <- read.table("../data/featureCounts_human.txt", header = TRUE, stringsAsFactors = FALSE)
head(df)
names(df) <- c(names(df)[1:6], sprintf("MSDP%s", seq(1:10)), sprintf("SDPC%s", seq(1:10)))
row.names(df) <- make.names(df$Geneid)
df <- df[c(names(df)[1:6], "MSDP2", "MSDP3", "MSDP4", "MSDP5", "MSDP6", "MSDP9", "MSDP10", "SDPC4", "SDPC5", "SDPC7", "SDPC10")]
df <- df[ ,-c(1:6)]
col_data <- DataFrame(condition = gsub("[0-9]+", "", names(df)), row.names = names(df))
# Create DESeq object
DESeq.df <- DESeqDataSetFromMatrix(countData = df, colData = col_data, design = ~ condition)
dim(DESeq.df)
# remove genes that have no counts
DESeq.df <- DESeq.df[rowSums(counts(DESeq.df)) > 0, ]
dim(DESeq.df)
# calculate SFs and add them to the object
DESeq.df <- estimateSizeFactors(DESeq.df)
plot(sizeFactors(DESeq.df), colSums(counts(DESeq.df)), ylab = "library size", xlab = "size factors")
# assign log normalized counts to a matrix
assay(DESeq.df, "log.norm.counts") <- log2(counts(DESeq.df, normalized = TRUE) + 1)
DESeq.rlog <- rlog(DESeq.df, blind = TRUE)
# plot dendrogram
corr_coeff <- cor(assay(DESeq.df, "log.norm.counts"), method = "pearson")
rlog.norm.counts <- assay(DESeq.df, "log.norm.counts")
as.dist(1-corr_coeff) %>% hclust %>% plot( ., labels = colnames(rlog.norm.counts),main = "rlog transformed read counts")
# run pca and plot the result
pca_data <- plotPCA(DESeq.rlog, returnData=TRUE)
p <- ggplot(pca_data,aes(x=PC1,y=PC2,color=group))
p <- p+geom_point()
p
library(ggplot2)
p <- ggplot(pca_data,aes(x=PC1,y=PC2,color=group))
p <- p+geom_point()
p
# run pcaExplorer
pcaExplorer::pcaExplorer(dds = DESeq.df, dst = DESeq.rlog)
# run pcaExplorer
pcaExplorer::pcaExplorer(dds = DESeq.df, dst = DESeq.rlog)
devtools::install_github("lbusett/insert_table")
